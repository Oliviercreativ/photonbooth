export default defineNuxtRouteMiddleware((to, from) => {
  // V√©rifier l'authentification c√¥t√© client
  const supabase = useSupabaseClient()
  
  // Cette fonction sera ex√©cut√©e c√¥t√© client uniquement
  if (process.client) {
    // V√©rifier la session de mani√®re asynchrone
    supabase.auth.getSession().then(({ data: { session }, error }) => {
      console.log('üîç Middleware guest - V√©rification session:', {
        session: session ? 'Pr√©sent' : 'Absent',
        user: session?.user?.id || 'Non connect√©',
        error: error?.message
      })
      
      if (session && !error) {
        console.log('‚úÖ Middleware guest - Utilisateur d√©j√† connect√©, redirection vers /')
        navigateTo('/')
      } else {
        console.log('‚úÖ Middleware guest - Utilisateur non connect√©, acc√®s autoris√©')
      }
    }).catch((error) => {
      console.error('‚ùå Middleware guest - Erreur v√©rification session:', error)
      // En cas d'erreur, autoriser l'acc√®s √† la page guest
    })
  }
})
